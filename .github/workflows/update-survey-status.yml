name: Update Survey Instance Status

on:
  schedule:
    # Run every 6 hours at the top of the hour
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      dry_run:
        description: 'Dry run mode (just check what would change)'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-survey-status:
    runs-on: ubuntu-latest
    
    steps:
      - name: Update Survey Instance Statuses
        run: |
          echo "🔄 Starting survey instance status update..."
          
          # Call the Supabase RPC function to update statuses
          RESPONSE=$(curl -s -X POST \
            "${{ secrets.SUPABASE_URL }}/rest/v1/rpc/update_survey_instance_statuses" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json")
          
          echo "📊 Response from status update:"
          echo "$RESPONSE" | jq '.'
          
          # Extract results
          ACTIVATED=$(echo "$RESPONSE" | jq -r '.activated // 0')
          DEACTIVATED=$(echo "$RESPONSE" | jq -r '.deactivated // 0')
          SUCCESS=$(echo "$RESPONSE" | jq -r '.success // false')
          
          echo "✅ Activated surveys: $ACTIVATED"
          echo "❌ Deactivated surveys: $DEACTIVATED"
          
          if [ "$SUCCESS" = "true" ]; then
            echo "✅ Survey status update completed successfully"
          else
            echo "❌ Survey status update failed"
            exit 1
          fi

      - name: Check Upcoming Status Changes
        run: |
          echo "🔮 Checking for upcoming status changes in the next 24 hours..."
          
          UPCOMING=$(curl -s -X POST \
            "${{ secrets.SUPABASE_URL }}/rest/v1/rpc/get_upcoming_status_changes" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"hours_ahead": 24}')
          
          echo "📋 Upcoming changes:"
          echo "$UPCOMING" | jq '.'
          
          # Count upcoming changes
          UPCOMING_ACTIVATIONS=$(echo "$UPCOMING" | jq -r '.upcoming_activations | length // 0')
          UPCOMING_DEACTIVATIONS=$(echo "$UPCOMING" | jq -r '.upcoming_deactivations | length // 0')
          
          echo "🟢 Surveys activating in next 24h: $UPCOMING_ACTIVATIONS"
          echo "🔴 Surveys deactivating in next 24h: $UPCOMING_DEACTIVATIONS"
          
          # Store notification data for email step
          echo "UPCOMING_ACTIVATIONS=$UPCOMING_ACTIVATIONS" >> $GITHUB_ENV
          echo "UPCOMING_DEACTIVATIONS=$UPCOMING_DEACTIVATIONS" >> $GITHUB_ENV
          
          # Store the full upcoming data as JSON for detailed notifications
          echo "UPCOMING_DATA<<EOF" >> $GITHUB_ENV
          echo "$UPCOMING" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Email Notifications
        if: env.UPCOMING_ACTIVATIONS > 0 || env.UPCOMING_DEACTIVATIONS > 0
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Survey Status Update Alert - ${{ env.UPCOMING_ACTIVATIONS }} Activating, ${{ env.UPCOMING_DEACTIVATIONS }} Deactivating
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: Survey System <${{ secrets.EMAIL_USERNAME }}>
          html_body: |
            <h2>Survey Status Update Report</h2>
            <p><strong>Date:</strong> ${{ steps.date.outputs.date }}</p>
            
            <h3>📊 Summary</h3>
            <ul>
              <li>🟢 <strong>Surveys activating in next 24h:</strong> ${{ env.UPCOMING_ACTIVATIONS }}</li>
              <li>🔴 <strong>Surveys deactivating in next 24h:</strong> ${{ env.UPCOMING_DEACTIVATIONS }}</li>
            </ul>
            
            <h3>📋 Details</h3>
            <pre style="background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto;">
            ${{ env.UPCOMING_DATA }}
            </pre>
            
            <hr>
            <p><small>This automated notification was sent from the Survey System status update workflow.</small></p>

      - name: Log Activity Summary
        run: |
          echo "📈 Survey Status Update Summary:"
          echo "Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "Status: Completed successfully ✅"
          echo "This job runs every 6 hours to automatically activate/deactivate surveys based on their date ranges."